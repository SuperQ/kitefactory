- name: Add peon group
  group:
    name: peon
    state: present

- name: Add peon user
  user:
    name: peon
    group: peon
    comment: "Peon Worker"
    shell: "{{ bash_prefix }}/bin/bash"

- name: Set peon login class
  user:
    name: peon
    login_class: "{{ peon_class }}"
  when: peon_class is defined

- name: "peon: add ~/bin"
  file:
    path: /home/peon/bin
    state: directory
    owner: peon
    group: peon
    mode: 0755

- name: "peon: add ~/go"
  file:
    path: /home/peon/go
    state: directory
    owner: peon
    group: peon
    mode: 0755

- name: "peon: add ~/var"
  file:
    path: /home/peon/var
    state: directory
    owner: peon
    group: peon
    mode: 0755

- name: "peon: configure GOPATH"
  lineinfile:
    dest: /home/peon/.profile
    create: yes
    owner: peon
    group: peon
    mode: 0664
    regexp: '^export GOPATH='
    line: 'export GOPATH="$HOME/go"'

- lineinfile:
    dest: /home/peon/.bashrc
    create: yes
    owner: peon
    group: peon
    mode: 0664
    regexp: '^alias make'
    state: absent

- name: Configure sudo 1/2
  file:
    path: "{{ sudoersd_path }}"
    state: directory
    owner: root
    group: "{{ root_group }}"
    mode: 0755

- name: Configure sudo 2/2
  copy:
    src: sudoers.d/default
    dest: "{{ sudoersd_path }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644

- name: Copy gc-builds
  copy:
    src: scripts/gc-builds
    dest: /home/peon/bin
    owner: peon
    group: peon
    mode: 0755

- name: Configure peon cron environment
  cron:
    name: PATH
    env: yes
    value: "{{ cron_path }}"
    user: peon

- name: Add gc-builds to cron
  cron:
    name: gc-builds
    special_time: hourly
    user: peon
    job: "~peon/bin/gc-builds {{ build_fs }} 75 /home/peon/var/gc_builds.prom"

